{"version":3,"sources":["components/TodoItem.js","components/Form.js","components/Header.js","components/TodoContainer.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","props","this","className","completed","title","type","checked","onChange","taskStatus","id","onClick","deleteTask","React","Component","Form","console","log","useState","setTitle","correctLength","setCorrectLength","invalidCharacter","setInvalidCharacter","action","htmlFor","value","event","target","preventDefault","length","addTaskItem","includes","Header","h1Style","textAlign","margin","color","style","timeToGetBusy","TodoContainer","updatedTodosArr","state","todos","map","todo","_id","setState","isLoading","axios","post","then","response","data","todosState","unshift","catch","err","alert","error","delete","filter","get","params","_limit","opacity","key","App","text","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1007008e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/todoItem.scss\";\n\n// const completedStyle = {\n// \tfontStyle: \"italic\",\n// \tcolor: \"#d35e0f\",\n// \topacity: 0.4,\n// \ttextDecoration: \"line-through\",\n// };\n\n// FUNCTIONAL COMPONENT\nclass TodoItem extends React.Component {\n\t// constructor(props) {\n\t//     super(props);\n\t// }\n\n\t// PROPS WRITING ALTERNATIVE\n\t// const { completed, handleChange, deleteTodoHandler, title, id } = props;\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<li className=\"li-task\">\n\t\t\t\t{/* ALTERNATIVE TO IN-LINE STYLE */}\n\t\t\t\t<span className={props.completed ? \"completed-item\" : null}>\n\t\t\t\t\t{this.props.title}\n\t\t\t\t</span>\n\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"check-box\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked={this.props.completed}\n\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\tthis.props.taskStatus(this.props.id);\n\t\t\t\t\t}}\n\t\t\t\t></input>\n\n\t\t\t\t<button\n\t\t\t\t\t// onClick={this.props.deleteTask}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.props.deleteTask(this.props.id);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tx\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nexport default TodoItem;\n","// import React, { Component, useState } from \"react\";\nimport React, { useState } from \"react\";\n\nconst Form = (props) => {\n\tconsole.log(useState(\"hello\"));\n\n\tconst [title, setTitle] = useState(\"\");\n\tconst [correctLength, setCorrectLength] = useState(false);\n\tconst [invalidCharacter, setInvalidCharacter] = useState(false);\n\n\t// HANDLER\n\t// const onChangeHandler = (e) => {\n\t// \tsetTitle(e.target.value);\n\t// };\n\n\t// ADD TASK\n\tconst addTask = (event) => {\n\t\t// this.setState({ title: event.target.value });\n\t\tsetTitle(event.target.value);\n\t};\n\n\t// SUBMIT TASK\n\tconst submitTask = (event) => {\n\t\tevent.preventDefault();\n\t\t// LENGTH CHECK\n\t\tif (title.length > 3 && title.length < 25) {\n\t\t\t// SET STATE\n\t\t\tprops.addTaskItem(title);\n\n\t\t\t// RESET INPUT\n\t\t\tsetCorrectLength(false);\n\t\t\tsetTitle(\"\");\n\t\t} else {\n\t\t\t// RESET INPUT\n\t\t\tsetCorrectLength(true);\n\t\t}\n\n\t\t// CHECK FOR @ SIGN\n\t\tif (title.includes(\"@\")) {\n\t\t\tsetInvalidCharacter(true);\n\t\t} else {\n\t\t\tsetInvalidCharacter(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<form className=\"task-form\" action=\"#\">\n\t\t\t<label htmlFor=\"#\">Add a task:</label>\n\t\t\t<input type=\"text\" value={title} onChange={addTask} />\n\n\t\t\t{correctLength ? <p>Task musst be between 3 and 25 length</p> : null}\n\t\t\t{invalidCharacter ? <p>Please don't use @ in your Todos!</p> : null}\n\t\t\t<button onClick={submitTask}>Submit</button>\n\t\t</form>\n\t);\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Header = (props) => {\n\tconst h1Style = {\n\t\ttextAlign: \"center\",\n\t\tmargin: \"30px\",\n\t\tcolor: \"green\",\n\t};\n\treturn (\n\t\t<header>\n\t\t\t<h1 style={h1Style}>todo</h1>\n\t\t\t{props.timeToGetBusy ? <p style={h1Style}>Time to get busy!</p> : null}\n\t\t\t<h2\n\t\t\t\tstyle={{\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\tmargin: \"22px\",\n\t\t\t\t\tcolor: \"green\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tReact Learning to do's\n\t\t\t</h2>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport Form from \"./Form\";\nimport Header from \"./Header\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\n\nclass TodoContainer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttodos: [\n\t\t\t\t// {\n\t\t\t\t// \tid: uuidv4(),\n\t\t\t\t// \ttitle: \"Read React Doc\",\n\t\t\t\t// \tcompleted: false,\n\t\t\t\t// },\n\t\t\t\t// {\n\t\t\t\t// \tid: uuidv4(),\n\t\t\t\t// \ttitle: \"Make todo\",\n\t\t\t\t// \tcompleted: false,\n\t\t\t\t// },\n\t\t\t],\n\t\t\tisLoading: false,\n\t\t\ttimeToGetBusy: false,\n\t\t};\n\t}\n\n\t// DID MOUNT\n\tcomponentDidMount() {\n\t\t// console.log(\"Component did mount\");\n\t\taxios\n\t\t\t.get(\"https://jsonplaceholder.typicode.com/todos\", {\n\t\t\t\tparams: { _limit: 10 },\n\t\t\t})\n\t\t\t// .get(\"http://localhost:3001/Tasks\")\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data);\n\t\t\t\t// ADD JSON TODO\n\t\t\t\tthis.setState({\n\t\t\t\t\ttodos: response.data,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\t// UPDATE\n\tcomponentDidUpdate(response) {\n\t\tconsole.log(\"Component did update\");\n\t\tconsole.log(response);\n\t\tif (this.state.todos.length > 5 && this.state.timeToGetBusy === false) {\n\t\t\tthis.setState({\n\t\t\t\ttimeToGetBusy: true,\n\t\t\t});\n\t\t} else if (\n\t\t\tthis.state.todos.length < 5 &&\n\t\t\tthis.state.timeToGetBusy === true\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\ttimeToGetBusy: false,\n\t\t\t});\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// TASK CHECKBOX\n\ttaskStatus = (id) => {\n\t\tconst updatedTodosArr = this.state.todos.map((todo) => {\n\t\t\tif (todo._id === id) {\n\t\t\t\ttodo.completed = !todo.completed;\n\t\t\t}\n\t\t\treturn todo;\n\t\t});\n\n\t\tthis.setState({\n\t\t\ttodos: updatedTodosArr,\n\t\t});\n\t};\n\n\t// ADD TASK\n\taddTaskItem = (title) => {\n\t\t// TASK IS LOADING MESSAGE\n\t\tthis.setState({ isLoading: true });\n\t\taxios\n\t\t\t.post(\"https://jsonplaceholder.typicode.com/todos\", {\n\t\t\t\ttitle: title,\n\t\t\t\tcompleted: false,\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data);\n\n\t\t\t\tconst todosState = [...this.state.todos];\n\t\t\t\ttodosState.unshift(response.data);\n\n\t\t\t\tthis.setState({\n\t\t\t\t\ttodos: todosState,\n\t\t\t\t\t// TASK IS LOADING MESSAGE\n\t\t\t\t\tisLoading: false,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\t// SIMPLE Error-Handling\n\t\t\t\t// MORE:\n\t\t\t\t// https://www.intricatecloud.io/2020/03/how-to-handle-api-errors-in-your-web-app-using-axios/\n\t\t\t\talert(\"Beim hinzufügen gab es einen Fehler: \" + err.response);\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\n\t\treturn;\n\t};\n\n\t// DELETE TASK\n\tdeleteTask = (id) => {\n\t\tthis.setState({ isLoading: true });\n\t\taxios\n\t\t\t.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response);\n\n\t\t\t\tconst updatedTodosArr = this.state.todos.filter(\n\t\t\t\t\t(todo) => todo.id !== id\n\t\t\t\t);\n\t\t\t\tthis.setState({\n\t\t\t\t\ttodos: updatedTodosArr,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\talert(\"Beim Entfernen gab es einen Fehler: \" + err.response);\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t};\n\n\trender() {\n\t\t// console.log(\"Component render\");\n\t\treturn (\n\t\t\t<div style={this.state.isLoading ? { opacity: 0.3 } : null}>\n\t\t\t\t{/* HEADER */}\n\t\t\t\t<Header timeToGetBusy={this.state.timeToGetBusy} />\n\n\t\t\t\t{/* TASK INPUT */}\n\t\t\t\t<Form addTaskItem={this.addTaskItem} />\n\n\t\t\t\t{/* TASK IS LOADING MESSAGE */}\n\t\t\t\t{this.state.isLoading ? <p>Task is loading...</p> : null}\n\n\t\t\t\t{/* TASK OUTPUT */}\n\t\t\t\t<ul className=\"todo-list\">\n\t\t\t\t\t{this.state.todos.map((todo) => (\n\t\t\t\t\t\t<TodoItem\n\t\t\t\t\t\t\tkey={todo.id}\n\t\t\t\t\t\t\ttitle={todo.title}\n\t\t\t\t\t\t\tcompleted={todo.completed}\n\t\t\t\t\t\t\tid={todo.id}\n\t\t\t\t\t\t\ttaskStatus={this.taskStatus}\n\t\t\t\t\t\t\tdeleteTask={this.deleteTask}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n//\nexport default TodoContainer;\n","import React from \"react\";\nimport \"./css/App.scss\";\n\nimport TodoContainer from \"./components/TodoContainer\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<TodoContainer text=\"Text as props\" />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}